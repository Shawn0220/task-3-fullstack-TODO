{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API_URL = \"http://127.0.0.1:5000/todos\";\n\n// 获取 TODO 列表\nexport const fetchTodos = createAsyncThunk(\"todos/fetchTodos\", async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n});\n\n// 添加 TODO\nexport const addTodo = createAsyncThunk(\"todos/addTodo\", async newTodo => {\n  const response = await axios.post(API_URL, newTodo);\n  return response.data;\n});\n\n// 定义类型\n\n// 修改 TODO\nexport const updateTodo = createAsyncThunk(\"todos/updateTodo\", async ({\n  id,\n  task,\n  status\n}) => {\n  // ✅ 指定参数类型\n  const response = await axios.put(`${API_URL}/${id}`, {\n    task,\n    status\n  });\n  return response.data;\n});\nexport const deleteTodo = createAsyncThunk(\"todos/deleteTodo\", async id => {\n  await axios.delete(`${API_URL}/${id}`);\n  return id; // ✅ 确保返回 id\n});\nconst initialState = {\n  items: [],\n  status: \"idle\"\n};\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState,\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.fulfilled, (state, action) => {\n      state.items = action.payload; // ✅ 确保 action.payload 是 Todo[]\n    }).addCase(addTodo.fulfilled, (state, action) => {\n      state.items.push(action.payload); // ✅ 确保 action.payload 是 Todo\n    }).addCase(updateTodo.fulfilled, (state, action) => {\n      const index = state.items.findIndex(todo => todo.id === action.meta.arg.id);\n      if (index !== -1) state.items[index] = action.meta.arg; // ✅ 确保 action.meta.arg 是 Todo\n    }).addCase(deleteTodo.fulfilled, (state, action) => {\n      state.items = state.items.filter(todo => todo.id !== action.payload); // ✅ 确保 action.payload 是 string\n    });\n  }\n});\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","fetchTodos","response","get","data","addTodo","newTodo","post","updateTodo","id","task","status","put","deleteTodo","delete","initialState","items","todoSlice","name","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","index","findIndex","todo","meta","arg","filter","reducer"],"sources":["D:/shawn_workspace/CSSI project/fullstack repo3/todo-frontend/src/todoSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://127.0.0.1:5000/todos\";\r\n\r\n// 获取 TODO 列表\r\nexport const fetchTodos = createAsyncThunk(\"todos/fetchTodos\", async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n});\r\n\r\n// 添加 TODO\r\nexport const addTodo = createAsyncThunk(\"todos/addTodo\", async (newTodo) => {\r\n  const response = await axios.post(API_URL, newTodo);\r\n  return response.data;\r\n});\r\n\r\n// 定义类型\r\ninterface Todo {\r\n    id: string;\r\n    task: string;\r\n    status: string;\r\n  }\r\n  \r\n// 修改 TODO\r\nexport const updateTodo = createAsyncThunk(\r\n    \"todos/updateTodo\",\r\n    async ({ id, task, status }: Todo) => {  // ✅ 指定参数类型\r\n    const response = await axios.put(`${API_URL}/${id}`, { task, status });\r\n    return response.data;\r\n    }\r\n);\r\n  \r\n\r\nexport const deleteTodo = createAsyncThunk<string, string>(\r\n    \"todos/deleteTodo\",\r\n    async (id) => {\r\n    await axios.delete(`${API_URL}/${id}`);\r\n    return id; // ✅ 确保返回 id\r\n    }\r\n);\r\n  \r\nconst initialState: { items: Todo[]; status: string } = {\r\n    items: [],\r\n    status: \"idle\",\r\n  };\r\n  \r\n\r\nconst todoSlice = createSlice({\r\n    name: \"todos\",\r\n    initialState,\r\n    reducers: {},\r\n    extraReducers: (builder) => {\r\n      builder\r\n        .addCase(fetchTodos.fulfilled, (state, action) => {\r\n          state.items = action.payload; // ✅ 确保 action.payload 是 Todo[]\r\n        })\r\n        .addCase(addTodo.fulfilled, (state, action) => {\r\n          state.items.push(action.payload); // ✅ 确保 action.payload 是 Todo\r\n        })\r\n        .addCase(updateTodo.fulfilled, (state, action) => {\r\n          const index = state.items.findIndex((todo) => todo.id === action.meta.arg.id);\r\n          if (index !== -1) state.items[index] = action.meta.arg; // ✅ 确保 action.meta.arg 是 Todo\r\n        })\r\n        .addCase(deleteTodo.fulfilled, (state, action) => {\r\n          state.items = state.items.filter((todo) => todo.id !== action.payload); // ✅ 确保 action.payload 是 string\r\n        });\r\n    },\r\n  });\r\n  \r\n\r\nexport default todoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B;;AAE7C;AACA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMI,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EACzC,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,OAAO,GAAGP,gBAAgB,CAAC,eAAe,EAAE,MAAOQ,OAAO,IAAK;EAC1E,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAACP,OAAO,EAAEM,OAAO,CAAC;EACnD,OAAOJ,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;;AAOA;AACA,OAAO,MAAMI,UAAU,GAAGV,gBAAgB,CACtC,kBAAkB,EAClB,OAAO;EAAEW,EAAE;EAAEC,IAAI;EAAEC;AAAa,CAAC,KAAK;EAAG;EACzC,MAAMT,QAAQ,GAAG,MAAMH,KAAK,CAACa,GAAG,CAAC,GAAGZ,OAAO,IAAIS,EAAE,EAAE,EAAE;IAAEC,IAAI;IAAEC;EAAO,CAAC,CAAC;EACtE,OAAOT,QAAQ,CAACE,IAAI;AACpB,CACJ,CAAC;AAGD,OAAO,MAAMS,UAAU,GAAGf,gBAAgB,CACtC,kBAAkB,EAClB,MAAOW,EAAE,IAAK;EACd,MAAMV,KAAK,CAACe,MAAM,CAAC,GAAGd,OAAO,IAAIS,EAAE,EAAE,CAAC;EACtC,OAAOA,EAAE,CAAC,CAAC;AACX,CACJ,CAAC;AAED,MAAMM,YAA+C,GAAG;EACpDC,KAAK,EAAE,EAAE;EACTL,MAAM,EAAE;AACV,CAAC;AAGH,MAAMM,SAAS,GAAGpB,WAAW,CAAC;EAC1BqB,IAAI,EAAE,OAAO;EACbH,YAAY;EACZI,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACrB,UAAU,CAACsB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACR,KAAK,GAAGS,MAAM,CAACC,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC,CACDJ,OAAO,CAACjB,OAAO,CAACkB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACR,KAAK,CAACW,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC,CAAC,CACDJ,OAAO,CAACd,UAAU,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAMG,KAAK,GAAGJ,KAAK,CAACR,KAAK,CAACa,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKgB,MAAM,CAACM,IAAI,CAACC,GAAG,CAACvB,EAAE,CAAC;MAC7E,IAAImB,KAAK,KAAK,CAAC,CAAC,EAAEJ,KAAK,CAACR,KAAK,CAACY,KAAK,CAAC,GAAGH,MAAM,CAACM,IAAI,CAACC,GAAG,CAAC,CAAC;IAC1D,CAAC,CAAC,CACDV,OAAO,CAACT,UAAU,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACR,KAAK,GAAGQ,KAAK,CAACR,KAAK,CAACiB,MAAM,CAAEH,IAAI,IAAKA,IAAI,CAACrB,EAAE,KAAKgB,MAAM,CAACC,OAAO,CAAC,CAAC,CAAC;IAC1E,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAGJ,eAAeT,SAAS,CAACiB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}