{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nconst API_URL = \"http://127.0.0.1:5000/todos\"; // Flask 后端 URL\n\n// 获取 TODO 列表\nexport const fetchTodos = createAsyncThunk(\"todos/fetchTodos\", async () => {\n  const response = await axios.get(API_URL);\n  return response.data;\n});\n\n// 添加 TODO\nexport const addTodo = createAsyncThunk(\"todos/addTodo\", async newTodo => {\n  const response = await axios.post(API_URL, newTodo);\n  return {\n    ...newTodo,\n    id: response.data.id\n  };\n});\n\n// 更新 TODO\nexport const updateTodo = createAsyncThunk(\"todos/updateTodo\", async todo => {\n  await axios.put(`${API_URL}/${todo.id}`, {\n    task: todo.task,\n    status: todo.status\n  });\n  return todo;\n});\n\n// 删除 TODO\nexport const deleteTodo = createAsyncThunk(\"todos/deleteTodo\", async id => {\n  await axios.delete(`${API_URL}/${id}`);\n  return id;\n});\n\n// Redux Slice\nconst todoSlice = createSlice({\n  name: \"todos\",\n  initialState: {\n    items: []\n  },\n  reducers: {},\n  extraReducers: builder => {\n    builder.addCase(fetchTodos.fulfilled, (state, action) => {\n      state.items = action.payload;\n    }).addCase(addTodo.fulfilled, (state, action) => {\n      state.items.push(action.payload);\n    }).addCase(updateTodo.fulfilled, (state, action) => {\n      const index = state.items.findIndex(todo => todo.id === action.payload.id);\n      if (index !== -1) {\n        state.items[index] = action.payload;\n      }\n    }).addCase(deleteTodo.fulfilled, (state, action) => {\n      state.items = state.items.filter(todo => todo.id !== action.payload);\n    });\n  }\n});\nexport default todoSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","axios","API_URL","fetchTodos","response","get","data","addTodo","newTodo","post","id","updateTodo","todo","put","task","status","deleteTodo","delete","todoSlice","name","initialState","items","reducers","extraReducers","builder","addCase","fulfilled","state","action","payload","push","index","findIndex","filter","reducer"],"sources":["D:/shawn_workspace/CSSI project/fullstack repo3/todo-frontend/src/todoSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nconst API_URL = \"http://127.0.0.1:5000/todos\"; // Flask 后端 URL\r\n\r\n// 获取 TODO 列表\r\nexport const fetchTodos = createAsyncThunk(\"todos/fetchTodos\", async () => {\r\n  const response = await axios.get(API_URL);\r\n  return response.data;\r\n});\r\n\r\n// 添加 TODO\r\nexport const addTodo = createAsyncThunk(\"todos/addTodo\", async (newTodo: { task: string; status: string }) => {\r\n  const response = await axios.post(API_URL, newTodo);\r\n  return { ...newTodo, id: response.data.id };\r\n});\r\n\r\n// 更新 TODO\r\nexport const updateTodo = createAsyncThunk(\"todos/updateTodo\", async (todo: { id: string; task: string; status: string }) => {\r\n  await axios.put(`${API_URL}/${todo.id}`, { task: todo.task, status: todo.status });\r\n  return todo;\r\n});\r\n\r\n// 删除 TODO\r\nexport const deleteTodo = createAsyncThunk(\"todos/deleteTodo\", async (id: string) => {\r\n  await axios.delete(`${API_URL}/${id}`);\r\n  return id;\r\n});\r\n\r\n// Redux Slice\r\nconst todoSlice = createSlice({\r\n  name: \"todos\",\r\n  initialState: { items: [] as { id: string; task: string; status: string }[] },\r\n  reducers: {},\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchTodos.fulfilled, (state, action) => {\r\n        state.items = action.payload;\r\n      })\r\n      .addCase(addTodo.fulfilled, (state, action) => {\r\n        state.items.push(action.payload);\r\n      })\r\n      .addCase(updateTodo.fulfilled, (state, action) => {\r\n        const index = state.items.findIndex((todo) => todo.id === action.payload.id);\r\n        if (index !== -1) {\r\n          state.items[index] = action.payload;\r\n        }\r\n      })\r\n      .addCase(deleteTodo.fulfilled, (state, action) => {\r\n        state.items = state.items.filter((todo) => todo.id !== action.payload);\r\n      });\r\n  },\r\n});\r\n\r\nexport default todoSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,EAAEC,gBAAgB,QAAuB,kBAAkB;AAC/E,OAAOC,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,6BAA6B,CAAC,CAAC;;AAE/C;AACA,OAAO,MAAMC,UAAU,GAAGH,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzE,MAAMI,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAACH,OAAO,CAAC;EACzC,OAAOE,QAAQ,CAACE,IAAI;AACtB,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,OAAO,GAAGP,gBAAgB,CAAC,eAAe,EAAE,MAAOQ,OAAyC,IAAK;EAC5G,MAAMJ,QAAQ,GAAG,MAAMH,KAAK,CAACQ,IAAI,CAACP,OAAO,EAAEM,OAAO,CAAC;EACnD,OAAO;IAAE,GAAGA,OAAO;IAAEE,EAAE,EAAEN,QAAQ,CAACE,IAAI,CAACI;EAAG,CAAC;AAC7C,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMC,UAAU,GAAGX,gBAAgB,CAAC,kBAAkB,EAAE,MAAOY,IAAkD,IAAK;EAC3H,MAAMX,KAAK,CAACY,GAAG,CAAC,GAAGX,OAAO,IAAIU,IAAI,CAACF,EAAE,EAAE,EAAE;IAAEI,IAAI,EAAEF,IAAI,CAACE,IAAI;IAAEC,MAAM,EAAEH,IAAI,CAACG;EAAO,CAAC,CAAC;EAClF,OAAOH,IAAI;AACb,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMI,UAAU,GAAGhB,gBAAgB,CAAC,kBAAkB,EAAE,MAAOU,EAAU,IAAK;EACnF,MAAMT,KAAK,CAACgB,MAAM,CAAC,GAAGf,OAAO,IAAIQ,EAAE,EAAE,CAAC;EACtC,OAAOA,EAAE;AACX,CAAC,CAAC;;AAEF;AACA,MAAMQ,SAAS,GAAGnB,WAAW,CAAC;EAC5BoB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IAAEC,KAAK,EAAE;EAAqD,CAAC;EAC7EC,QAAQ,EAAE,CAAC,CAAC;EACZC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACtB,UAAU,CAACuB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC,CAAC,CACDJ,OAAO,CAAClB,OAAO,CAACmB,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7CD,KAAK,CAACN,KAAK,CAACS,IAAI,CAACF,MAAM,CAACC,OAAO,CAAC;IAClC,CAAC,CAAC,CACDJ,OAAO,CAACd,UAAU,CAACe,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChD,MAAMG,KAAK,GAAGJ,KAAK,CAACN,KAAK,CAACW,SAAS,CAAEpB,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKkB,MAAM,CAACC,OAAO,CAACnB,EAAE,CAAC;MAC5E,IAAIqB,KAAK,KAAK,CAAC,CAAC,EAAE;QAChBJ,KAAK,CAACN,KAAK,CAACU,KAAK,CAAC,GAAGH,MAAM,CAACC,OAAO;MACrC;IACF,CAAC,CAAC,CACDJ,OAAO,CAACT,UAAU,CAACU,SAAS,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAChDD,KAAK,CAACN,KAAK,GAAGM,KAAK,CAACN,KAAK,CAACY,MAAM,CAAErB,IAAI,IAAKA,IAAI,CAACF,EAAE,KAAKkB,MAAM,CAACC,OAAO,CAAC;IACxE,CAAC,CAAC;EACN;AACF,CAAC,CAAC;AAEF,eAAeX,SAAS,CAACgB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}