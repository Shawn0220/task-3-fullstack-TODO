{"ast":null,"code":"var _jsxFileName = \"D:\\\\shawn_workspace\\\\CSSI project\\\\fullstack repo3\\\\todo-frontend\\\\src\\\\components\\\\TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchTodos } from '../store/todoSlice';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    todos,\n    status,\n    error\n  } = useSelector(state => state.todos);\n  useEffect(() => {\n    if (status === 'idle') {\n      dispatch(fetchTodos());\n    }\n  }, [status, dispatch]);\n  if (status === 'loading') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center p-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-xl\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 53\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 12\n    }, this);\n  }\n  if (status === 'failed') {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 text-red-500\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold mb-4\",\n      children: \"TODO Task List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), todos.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 bg-gray-50 rounded text-center\",\n      children: \"No TODO, please add more TODO task :)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: todos.map(todo => /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo\n      }, todo.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoList, \"60urb3I2Rl3htH3rvPi5W8O0zzI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","fetchTodos","TodoItem","jsxDEV","_jsxDEV","TodoList","_s","dispatch","todos","status","error","state","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","todo","id","_c","$RefreshReg$"],"sources":["D:/shawn_workspace/CSSI project/fullstack repo3/todo-frontend/src/components/TodoList.tsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { RootState, AppDispatch } from '../store/store';\r\nimport { fetchTodos } from '../store/todoSlice'\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList: React.FC = () => {\r\n  const dispatch = useDispatch<AppDispatch>();\r\n  const { todos, status, error } = useSelector((state: RootState) => state.todos);\r\n\r\n  useEffect(() => {\r\n    if (status === 'idle') {\r\n      dispatch(fetchTodos());\r\n    }\r\n  }, [status, dispatch]);\r\n\r\n  if (status === 'loading') {\r\n    return <div className=\"flex justify-center p-8\"><div className=\"text-xl\">Loading...</div></div>;\r\n  }\r\n\r\n  if (status === 'failed') {\r\n    return <div className=\"p-4 text-red-500\">Error: {error}</div>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2 className=\"text-xl font-bold mb-4\">TODO Task List</h2>\r\n      \r\n      {todos.length === 0 ? (\r\n        <div className=\"p-4 bg-gray-50 rounded text-center\">No TODO, please add more TODO task :)</div>\r\n      ) : (\r\n        <div>\r\n          {todos.map(todo => (\r\n            <TodoItem key={todo.id} todo={todo} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AAEtD,SAASC,UAAU,QAAQ,oBAAoB;AAC/C,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC/B,MAAMC,QAAQ,GAAGP,WAAW,CAAc,CAAC;EAC3C,MAAM;IAAEQ,KAAK;IAAEC,MAAM;IAAEC;EAAM,CAAC,GAAGX,WAAW,CAAEY,KAAgB,IAAKA,KAAK,CAACH,KAAK,CAAC;EAE/EV,SAAS,CAAC,MAAM;IACd,IAAIW,MAAM,KAAK,MAAM,EAAE;MACrBF,QAAQ,CAACN,UAAU,CAAC,CAAC,CAAC;IACxB;EACF,CAAC,EAAE,CAACQ,MAAM,EAAEF,QAAQ,CAAC,CAAC;EAEtB,IAAIE,MAAM,KAAK,SAAS,EAAE;IACxB,oBAAOL,OAAA;MAAKQ,SAAS,EAAC,yBAAyB;MAAAC,QAAA,eAACT,OAAA;QAAKQ,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EACjG;EAEA,IAAIR,MAAM,KAAK,QAAQ,EAAE;IACvB,oBAAOL,OAAA;MAAKQ,SAAS,EAAC,kBAAkB;MAAAC,QAAA,GAAC,SAAO,EAACH,KAAK;IAAA;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC/D;EAEA,oBACEb,OAAA;IAAAS,QAAA,gBACET,OAAA;MAAIQ,SAAS,EAAC,wBAAwB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAEzDT,KAAK,CAACU,MAAM,KAAK,CAAC,gBACjBd,OAAA;MAAKQ,SAAS,EAAC,oCAAoC;MAAAC,QAAA,EAAC;IAAqC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,gBAE/Fb,OAAA;MAAAS,QAAA,EACGL,KAAK,CAACW,GAAG,CAACC,IAAI,iBACbhB,OAAA,CAACF,QAAQ;QAAekB,IAAI,EAAEA;MAAK,GAApBA,IAAI,CAACC,EAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CACtC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CAjCID,QAAkB;EAAA,QACLL,WAAW,EACKD,WAAW;AAAA;AAAAuB,EAAA,GAFxCjB,QAAkB;AAmCxB,eAAeA,QAAQ;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}